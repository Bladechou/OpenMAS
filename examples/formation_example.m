clear all; close all; 

% ADD THE PROGRAM PATHS
addpath('environment');
addpath('objects');  
addpath('scenarios'); 
addpath('toolboxes/Intlab_V7.1');   

%If intlab needs to be reloaded
try 
    wrkDir = pwd;
    test = infsup(0,1);
    clearvars test 
    IntDir = strcat(pwd,'\Intlab_V7.1\startupJD.m');
catch 
    run('startup.m'); 
    cd(wrkDir)
end
% SIMULATION PARAMETERS
% sim_figureSet ={'all'};
sim_figureSet = {'isometric','inputs','events'};
sim_duration = 30;
sim_timeStep = 1E-2;
sim_verbose = 1;
sim_threadPool = 0;
% SCENARIO PARAMETERS
sim_plotScenario   = 1;
sim_agentOrbit     = 25;
sim_obstacleOrbit  = 10;
sim_obstacleRadius = 2;

% 1. DEFINE THE VECTOR OF AGENT TYPES
fprintf('|| Assigning agent definitions:\n');
agentNumber = 2;
for index = 1:agentNumber
%       agentIndex{index} = agent_test();
%       agentIndex{index} = agent_VO();
%       agentIndex{index} = agent_RVO();
%       agentIndex{index} = agent_HRVO();
%       agentIndex{index} = agent_formation_seperation();
%       agentIndex{index} = agent_formation_VO();
      agentIndex{index} = agent_formation_RVO();
%     agentIndex{index} = agent_formation_HRVO();
%       agentIndex{index} = agent_formation_interval();
end

% DEFINE SIMULATION CONDITIONS
adjacencyMatrix = 5*double(~eye(agentNumber)); % Formation adjacency matrix

% /////////////////////////// SCENARIO A //////////////////////////////////
objectIndex = getScenario_formation_twoAgentsTwoObstacles('agents',agentIndex,...
                                                      'agentOrbit',sim_agentOrbit,...
                                                 'adjacencyMatrix',adjacencyMatrix,...
                                                  'obstacleRadius',sim_obstacleRadius,...
                                                   'obstacleOrbit',sim_obstacleOrbit,...
                                                            'plot',sim_plotScenario);
% /////////////////////////// SCENARIO B //////////////////////////////////  
% objectIndex = getScenario_formation_twoAgentsFourObstacles('agents',agentIndex,...
%                                                        'agentOrbit',sim_agentOrbit,...
%                                                   'adjacencyMatrix',adjacencyMatrix,...
%                                                    'obstacleRadius',sim_obstacleRadius,...
%                                                     'obstacleOrbit',sim_obstacleOrbit,...
%                                                              'plot',sim_plotScenario);  
% /////////////////////////// SCENARIO C //////////////////////////////////
% objectIndex = getScenario_formation_threeAgentsTwoObstacles('agents',agentIndex,...
%                                                         'agentOrbit',sim_agentOrbit,...
%                                                    'adjacencyMatrix',adjacencyMatrix,...
%                                                     'obstacleRadius',sim_obstacleRadius,...
%                                                      'obstacleOrbit',sim_obstacleOrbit,...
%                                                               'plot',sim_plotScenario); 
% /////////////////////////// SCENARIO D //////////////////////////////////
% objectIndex = getScenario_formation_fourAgentsFourObstacles('agents',agentIndex,...
%                                                         'agentOrbit',sim_agentOrbit,...
%                                                    'adjacencyMatrix',adjacencyMatrix,...
%                                                     'obstacleRadius',sim_obstacleRadius,...
%                                                      'obstacleOrbit',sim_obstacleOrbit,...
%                                                               'plot',sim_plotScenario); 
% ////////////////////////// SCENARIO Y ///////////////////////////////////
% objectIndex = getScenario_formation_randomAgentsRegularObstacles('agents',agentIndex,...
%                                                              'agentOrbit',sim_agentOrbit,...
%                                                         'adjacencyMatrix',adjacencyMatrix,...
%                                                          'obstacleRadius',sim_obstacleRadius,...
%                                                           'obstacleOrbit',sim_obstacleOrbit,...
%                                                                    'plot',sim_plotScenario); 
% ////////////////////////// SCENARIO Y ///////////////////////////////////
% objectIndex = getScenario_formation_randomAgentsRandomObstacles('agents',agentIndex,...
%                                                             'agentOrbit',sim_agentOrbit,...
%                                                        'adjacencyMatrix',adjacencyMatrix,...
%                                                         'obstacleRadius',sim_obstacleRadius,...
%                                                          'obstacleOrbit',sim_obstacleOrbit,...
%                                                                   'plot',sim_plotScenario);

% /////////////////////// OTHER SCENARIOS /////////////////////////////////
% objectIndex = getScenario_randomConcentric('agents',agentIndex,...
%                                      'radius',30,...
%                                      'velocities',10,...
%                                      'plot',1);                                                                                               
% objectIndex = getScenario_SDF2017offsetAngle('agents',agentIndex,...
%                                 'waypointOffsetAngle', (1.000*pi),...
%                                              'radius',30,...
%                                          'velocities',0,...
%                                         'offsetAngle',1/5*pi);                                  

%% %%%%%% INITIALISE THE SIMULATION WITH THE OBJECT INDEX %%%%%%%%%%%%%%%%%
[DATA,META] = simulation_initialise('objects',objectIndex,...
                                    'simTime',sim_duration,... 
                                         'dt',sim_timeStep,...
                                    'figures',sim_figureSet,...
                                    'verbose',sim_verbose,...
                                 'threadPool',sim_threadPool);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clearvars -except DATA META
load(strcat(META.outputPath,'META.mat'));
load(strcat(META.outputPath,'EVENTS.mat'));

% PLOT THE GLYPANOV FUNCTION
Vglobal = zeros(size(DATA.timeVector));
for ind = 1:DATA.totalObjects
    if isprop(DATA.objectIndex{ind},'DATA')
        Vglobal = Vglobal + DATA.objectIndex{ind}.DATA.lypanov;
    end
end
figureHandle = figure('Name','System Lypanov Function');
plot(DATA.timeVector,Vglobal);
annotationText = sprintf('Final value: %s',num2str(Vglobal(1,end)));
text(DATA.timeVector(1,end),Vglobal(1,end),annotationText);
savefig(figureHandle,strcat(META.outputPath,'Lypanov.fig')); 
fprintf('..Complete.\n');



